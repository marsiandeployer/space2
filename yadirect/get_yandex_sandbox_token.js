const axios = require('axios');
require('dotenv').config();

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç –ü–µ—Å–æ—á–Ω–∏—Ü–∞');
console.log('==========================================');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const clientId = process.env.YANDEX_CLIENT_ID;
const clientSecret = process.env.YANDEX_CLIENT_SECRET;
const redirectUri = process.env.YANDEX_REDIRECT_URI;
const sandboxToken = process.env.YANDEX_SANDBOX_TOKEN;

if (!clientId || !clientSecret) {
  console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
  console.error('   YANDEX_CLIENT_ID –∏–ª–∏ YANDEX_CLIENT_SECRET');
  process.exit(1);
}

if (!sandboxToken) {
  console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –º–∞—Å—Ç–µ—Ä-—Ç–æ–∫–µ–Ω –ø–µ—Å–æ—á–Ω–∏—Ü—ã:');
  console.error('   YANDEX_SANDBOX_TOKEN');
  process.exit(1);
}

console.log('üìã –î–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:');
console.log(`   Client ID: ${clientId}`);
console.log(`   Redirect URI: ${redirectUri}`);
console.log(`   Sandbox Token: ${sandboxToken}`);
console.log('');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –ø–µ—Å–æ—á–Ω–∏—Ü—ã
async function testSandboxToken(token) {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä-—Ç–æ–∫–µ–Ω–∞ –ø–µ—Å–æ—á–Ω–∏—Ü—ã...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ API –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const userInfoResponse = await axios.get('https://login.yandex.ru/info', {
      headers: {
        'Authorization': `OAuth ${token}`
      }
    });
    
    console.log('‚úÖ –ú–∞—Å—Ç–µ—Ä-—Ç–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω!');
    console.log('üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:');
    console.log(`   Login: ${userInfoResponse.data.login}`);
    console.log(`   Display Name: ${userInfoResponse.data.display_name}`);
    console.log(`   Email: ${userInfoResponse.data.default_email || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
    console.log('');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Å–æ—á–Ω–∏—Ü–µ –Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç
    console.log('üß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Å–æ—á–Ω–∏—Ü–µ –Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç...');
    
    // –î–ª—è –ø–µ—Å–æ—á–Ω–∏—Ü—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ—Ç –∂–µ URL, –Ω–æ –¥—Ä—É–≥–æ–π —Ç–æ–∫–µ–Ω
    const directResponse = await axios.post('https://api.direct.yandex.com/json/v5/campaigns', {
      method: 'get',
      params: {
        SelectionCriteria: {},
        FieldNames: ['Id', 'Name', 'Status', 'StatusPayment', 'StatusClarification']
      }
    }, {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json; charset=utf-8',
        'Accept-Language': 'ru'
      }
    });
    
    if (directResponse.data.result && directResponse.data.result.Campaigns) {
      const campaigns = directResponse.data.result.Campaigns;
      console.log(`‚úÖ –î–æ—Å—Ç—É–ø –∫ –ø–µ—Å–æ—á–Ω–∏—Ü–µ –Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç –ø–æ–ª—É—á–µ–Ω! –ù–∞–π–¥–µ–Ω–æ –∫–∞–º–ø–∞–Ω–∏–π: ${campaigns.length}`);
      
      if (campaigns.length > 0) {
        console.log('üìä –¢–µ—Å—Ç–æ–≤—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏ –≤ –ø–µ—Å–æ—á–Ω–∏—Ü–µ:');
        campaigns.forEach((campaign, index) => {
          console.log(`   ${index + 1}. ID: ${campaign.Id}, –ù–∞–∑–≤–∞–Ω–∏–µ: "${campaign.Name}", –°—Ç–∞—Ç—É—Å: ${campaign.Status}`);
        });
      } else {
        console.log('üìù –í –ø–µ—Å–æ—á–Ω–∏—Ü–µ –ø–æ–∫–∞ –Ω–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π');
        console.log('üí° –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –ø–µ—Å–æ—á–Ω–∏—Ü—ã –Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç');
      }
    } else {
      console.log('‚ö†Ô∏è  –ü–æ–ª—É—á–µ–Ω –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –ø–µ—Å–æ—á–Ω–∏—Ü—ã –Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç:');
      console.log(JSON.stringify(directResponse.data, null, 2));
    }
    
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –º–∞—Å—Ç–µ—Ä-—Ç–æ–∫–µ–Ω–∞ –ø–µ—Å–æ—á–Ω–∏—Ü—ã:');
    if (error.response) {
      console.error(`   HTTP ${error.response.status}: ${error.response.statusText}`);
      console.error(`   –û—Ç–≤–µ—Ç: ${JSON.stringify(error.response.data, null, 2)}`);
      
      // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø–µ—Å–æ—á–Ω–∏—Ü—ã
      if (error.response.data && error.response.data.error) {
        const errorCode = error.response.data.error.error_code;
        const errorDetail = error.response.data.error.error_detail;
        
        console.log('');
        console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –æ—à–∏–±–∫–∏:');
        
        if (errorCode === 58) {
          console.log('   - –≠—Ç–æ –æ—à–∏–±–∫–∞ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è –±–æ–µ–≤–æ–≥–æ API');
          console.log('   - –í –ø–µ—Å–æ—á–Ω–∏—Ü–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ YANDEX_SANDBOX_TOKEN –≤–º–µ—Å—Ç–æ YANDEX_DIRECT_TOKEN');
          console.log('   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –º–∞—Å—Ç–µ—Ä-—Ç–æ–∫–µ–Ω –ø–µ—Å–æ—á–Ω–∏—Ü—ã –∞–∫—Ç—É–∞–ª–µ–Ω');
        } else if (errorCode === 54) {
          console.log('   - –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API');
          console.log('   - –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—Ä–æ—Å–æ–º');
        } else {
          console.log(`   - –ö–æ–¥ –æ—à–∏–±–∫–∏: ${errorCode}`);
          console.log(`   - –û–ø–∏—Å–∞–Ω–∏–µ: ${errorDetail}`);
        }
      }
    } else {
      console.error(`   ${error.message}`);
    }
    
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π –≤ –ø–µ—Å–æ—á–Ω–∏—Ü–µ
async function createTestCampaigns(token) {
  try {
    console.log('');
    console.log('üèóÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞–º–ø–∞–Ω–∏–∏ –≤ –ø–µ—Å–æ—á–Ω–∏—Ü–µ...');
    
    const campaignData = {
      method: 'add',
      params: {
        Campaigns: [
          {
            Name: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–∞–º–ø–∞–Ω–∏—è API',
            StartDate: new Date().toISOString().split('T')[0],
            Type: 'TEXT_CAMPAIGN',
            TextCampaign: {
              BiddingStrategy: {
                Search: {
                  BiddingStrategyType: 'HIGHEST_POSITION'
                },
                Network: {
                  BiddingStrategyType: 'SERVING_OFF'
                }
              },
              Settings: []
            }
          }
        ]
      }
    };
    
    const response = await axios.post('https://api.direct.yandex.com/json/v5/campaigns', campaignData, {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json; charset=utf-8',
        'Accept-Language': 'ru'
      }
    });
    
    if (response.data.result && response.data.result.AddResults) {
      const campaignId = response.data.result.AddResults[0].Id;
      console.log(`‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∫–∞–º–ø–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞! ID: ${campaignId}`);
    } else {
      console.log('‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞–º–ø–∞–Ω–∏–∏:');
      console.log(JSON.stringify(response.data, null, 2));
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞–º–ø–∞–Ω–∏–∏:');
    if (error.response) {
      console.error(`   HTTP ${error.response.status}: ${error.response.statusText}`);
      console.error(`   –û—Ç–≤–µ—Ç: ${JSON.stringify(error.response.data, null, 2)}`);
    } else {
      console.error(`   ${error.message}`);
    }
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('üß™ === –†–ï–ñ–ò–ú –ü–ï–°–û–ß–ù–ò–¶–´ ===');
  console.log('');
  console.log('‚ÑπÔ∏è  –ü–µ—Å–æ—á–Ω–∏—Ü–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç - —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è —Å—Ä–µ–¥–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π');
  console.log('   –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å API –±–µ–∑ –≤–ª–∏—è–Ω–∏—è –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏');
  console.log('');
  
  const success = await testSandboxToken(sandboxToken);
  
  if (success) {
    console.log('');
    console.log('üéâ –ü–µ—Å–æ—á–Ω–∏—Ü–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!');
    console.log('');
    console.log('üìö –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Å–æ—á–Ω–∏—Ü–µ–π:');
    console.log('   - –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ: https://direct.yandex.ru/registered?cmd=manageAPIData');
    console.log('   - –û—á–∏—Å—Ç–∏—Ç—å –ø–µ—Å–æ—á–Ω–∏—Ü—É –æ—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
    console.log('   - –°–±—Ä–æ—Å–∏—Ç—å —Å—á–µ—Ç—á–∏–∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π');
    console.log('');
    
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞–º–ø–∞–Ω–∏–∏
    const args = process.argv.slice(2);
    if (args.includes('--create-test-campaign')) {
      await createTestCampaigns(sandboxToken);
    }
  }
}

// –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main().catch(console.error);

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
module.exports = { 
  testSandboxToken,
  createTestCampaigns
};
