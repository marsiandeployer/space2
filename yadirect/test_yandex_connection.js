#!/usr/bin/env node

const axios = require('axios');
require('dotenv').config();

/**
 * –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç API
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API –∏ –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–º–ø–∞–Ω–∏–π
 */
async function testYandexDirectConnection() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç API...\n');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
  console.log(`YANDEX_DIRECT_API_URL: ${process.env.YANDEX_DIRECT_API_URL}`);
  console.log(`YANDEX_DIRECT_TOKEN: ${process.env.YANDEX_DIRECT_TOKEN ? '‚úì –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
  console.log(`YANDEX_OAUTH_URL: ${process.env.YANDEX_OAUTH_URL}`);
  console.log(`YANDEX_CLIENT_ID: ${process.env.YANDEX_CLIENT_ID ? '‚úì –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}\n`);

  if (!process.env.YANDEX_DIRECT_TOKEN) {
    console.log('‚ùå –¢–æ–∫–µ–Ω –Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
    console.log('–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:');
    console.log('1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: https://oauth.yandex.ru/authorize?response_type=code&client_id=9ba5833fea41491ab3ea12fb37044691&redirect_uri=https://habab.ru/redirect&scope=direct:api');
    console.log('2. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –∏ –ø–æ–ª—É—á–∏—Ç–µ –∫–æ–¥');
    console.log('3. –û–±–º–µ–Ω—è–π—Ç–µ –∫–æ–¥ –Ω–∞ —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ POST –∑–∞–ø—Ä–æ—Å');
    return;
  }

  try {
    console.log('üöÄ –ó–∞–ø—Ä–æ—Å –∫ –Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞–º–ø–∞–Ω–∏–π...');

    const requestData = {
      method: 'get',
      params: {
        SelectionCriteria: {},
        FieldNames: ['Id', 'Name', 'Status', 'StatusPayment', 'StatusClarification', 'SourceId', 'Statistics']
      }
    };

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:', JSON.stringify(requestData, null, 2));

    const response = await axios.post(
      `${process.env.YANDEX_DIRECT_API_URL}/campaigns`,
      requestData,
      {
        headers: {
          'Authorization': `Bearer ${process.env.YANDEX_DIRECT_TOKEN}`,
          'Content-Type': 'application/json; charset=utf-8',
          'Accept-Language': 'ru',
          'Client-Login': process.env.YANDEX_CLIENT_LOGIN || '',
          'Use-Operator-Units': 'false'
        }
      }
    );

    console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API!');
    console.log(`üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status}`);
    console.log('üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:', response.headers);
    console.log('\nüìÅ –î–∞–Ω–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–π:');
    
    if (response.data && response.data.result && response.data.result.Campaigns) {
      const campaigns = response.data.result.Campaigns;
      console.log(`–ù–∞–π–¥–µ–Ω–æ –∫–∞–º–ø–∞–Ω–∏–π: ${campaigns.length}`);
      
      campaigns.forEach((campaign, index) => {
        console.log(`\n${index + 1}. –ö–∞–º–ø–∞–Ω–∏—è ID: ${campaign.Id}`);
        console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${campaign.Name}`);
        console.log(`   –°—Ç–∞—Ç—É—Å: ${campaign.Status}`);
        console.log(`   –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: ${campaign.StatusPayment}`);
        if (campaign.Statistics) {
          console.log(`   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –ø–æ–∫–∞–∑—ã=${campaign.Statistics.Impressions}, –∫–ª–∏–∫–∏=${campaign.Statistics.Clicks}`);
        }
      });
    } else {
      console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:', JSON.stringify(response.data, null, 2));
    }

  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API:');
    console.log(`–°—Ç–∞—Ç—É—Å: ${error.response?.status}`);
    console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ: ${error.message}`);
    
    if (error.response?.data) {
      console.log('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', JSON.stringify(error.response.data, null, 2));
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫
    if (error.response?.status === 401) {
      console.log('\nüîë –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:');
      console.log('1. –ù–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –∏—Å—Ç–µ–∫—à–∏–π —Ç–æ–∫–µ–Ω');
      console.log('2. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞');
      console.log('3. –¢–æ–∫–µ–Ω –Ω–µ –∏–º–µ–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π');
    } else if (error.response?.status === 400) {
      console.log('\nüìù –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–∫–∏ –∑–∞–ø—Ä–æ—Å–∞:');
      console.log('1. –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞');
      console.log('2. –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã');
      console.log('3. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö');
    }
  }
}

/**
 * –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞
 */
async function testTokenValidation() {
  console.log('\nüîê –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞...');
  
  try {
    const response = await axios.get(
      `https://login.yandex.ru/info?format=json`,
      {
        headers: {
          'Authorization': `OAuth ${process.env.YANDEX_DIRECT_TOKEN}`
        }
      }
    );

    console.log('‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω!');
    console.log('üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', {
      login: response.data.login,
      id: response.data.id,
      display_name: response.data.display_name
    });

  } catch (error) {
    console.log('‚ùå –¢–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', error.message);
    if (error.response?.data) {
      console.log('–î–µ—Ç–∞–ª–∏:', error.response.data);
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
async function runTests() {
  await testTokenValidation();
  await testYandexDirectConnection();
}

runTests().catch(console.error);
