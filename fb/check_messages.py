#!/usr/bin/env python3
"""
–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π WhatsApp Business API
"""

import os
import requests
import json
from datetime import datetime, timedelta
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def get_messages_history(phone_number_id, limit=10):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    access_token = os.getenv('ACCESS_TOKEN')
    
    if not access_token:
        print("‚ùå ACCESS_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None
    
    # –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
    url = f"https://graph.facebook.com/v23.0/{phone_number_id}/messages"
    headers = {
        'Authorization': f'Bearer {access_token}',
        'Content-Type': 'application/json'
    }
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
    params = {
        'limit': limit,
        'fields': 'id,status,timestamp,type,text,recipient_id,message_status'
    }
    
    print(f"üìã –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –Ω–æ–º–µ—Ä–∞ ID: {phone_number_id}")
    print(f"URL: {url}")
    print(f"–ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
    
    try:
        response = requests.get(url, headers=headers, params=params)
        
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—É—á–µ–Ω–∞")
            return data
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏: {response.status_code}")
            return None
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None

def get_conversation_analytics(phone_number_id):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤"""
    access_token = os.getenv('ACCESS_TOKEN')
    
    if not access_token:
        print("‚ùå ACCESS_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None
    
    # –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    url = f"https://graph.facebook.com/v23.0/{phone_number_id}/conversation_analytics"
    headers = {
        'Authorization': f'Bearer {access_token}',
        'Content-Type': 'application/json'
    }
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 7 –¥–Ω–µ–π
    end_time = datetime.now()
    start_time = end_time - timedelta(days=7)
    
    params = {
        'start': int(start_time.timestamp()),
        'end': int(end_time.timestamp()),
        'granularity': 'DAILY',
        'metric_types': 'COST,CONVERSATION'
    }
    
    print(f"\nüìä –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤...")
    print(f"URL: {url}")
    print(f"–ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
    
    try:
        response = requests.get(url, headers=headers, params=params)
        
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞")
            return data
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {response.status_code}")
            return None
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None

def get_message_status(message_id):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    access_token = os.getenv('ACCESS_TOKEN')
    
    if not access_token:
        print("‚ùå ACCESS_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None
    
    # –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    url = f"https://graph.facebook.com/v23.0/{message_id}"
    headers = {
        'Authorization': f'Bearer {access_token}',
        'Content-Type': 'application/json'
    }
    
    print(f"\nüîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–æ–±—â–µ–Ω–∏—è ID: {message_id}")
    print(f"URL: {url}")
    
    try:
        response = requests.get(url, headers=headers)
        
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –°—Ç–∞—Ç—É—Å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω")
            return data
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞: {response.status_code}")
            return None
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None

def get_waba_analytics(waba_id):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ WABA"""
    access_token = os.getenv('ACCESS_TOKEN')
    
    if not access_token:
        print("‚ùå ACCESS_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None
    
    # –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ WABA
    url = f"https://graph.facebook.com/v23.0/{waba_id}/message_analytics"
    headers = {
        'Authorization': f'Bearer {access_token}',
        'Content-Type': 'application/json'
    }
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 7 –¥–Ω–µ–π
    end_time = datetime.now()
    start_time = end_time - timedelta(days=7)
    
    params = {
        'start': int(start_time.timestamp()),
        'end': int(end_time.timestamp()),
        'granularity': 'DAILY'
    }
    
    print(f"\nüìà –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ WABA...")
    print(f"URL: {url}")
    print(f"–ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
    
    try:
        response = requests.get(url, headers=headers, params=params)
        
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ WABA –ø–æ–ª—É—á–µ–Ω–∞")
            return data
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ WABA: {response.status_code}")
            return None
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None

def main():
    print("üöÄ –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π WhatsApp Business API")
    print("=" * 60)
    
    # ID –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ç–µ—Å—Ç–æ–≤
    phone_number_id = "689775597552915"
    waba_id = os.getenv('WHATSAPP_BUSINESS_ACCOUNT_ID')
    
    # ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    last_message_id = "wamid.HBgLNDg1NzUwMTk5MjQVAgARGBJGM0VFOUJDNUZGMkRFQjkwQTcA"
    
    print(f"üìû Phone Number ID: {phone_number_id}")
    print(f"üè¢ WABA ID: {waba_id}")
    print(f"üí¨ Message ID: {last_message_id}")
    
    # 1. –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
    print("\n" + "="*60)
    messages_data = get_messages_history(phone_number_id)
    
    # 2. –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤
    print("\n" + "="*60)
    conversation_data = get_conversation_analytics(phone_number_id)
    
    # 3. –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    print("\n" + "="*60)
    message_status = get_message_status(last_message_id)
    
    # 4. –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É WABA
    print("\n" + "="*60)
    waba_analytics = get_waba_analytics(waba_id)
    
    print("\n" + "="*60)
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print(f"\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π: {'‚úÖ' if messages_data else '‚ùå'}")
    print(f"‚Ä¢ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤: {'‚úÖ' if conversation_data else '‚ùå'}")
    print(f"‚Ä¢ –°—Ç–∞—Ç—É—Å —Å–æ–æ–±—â–µ–Ω–∏—è: {'‚úÖ' if message_status else '‚ùå'}")
    print(f"‚Ä¢ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ WABA: {'‚úÖ' if waba_analytics else '‚ùå'}")

if __name__ == "__main__":
    main()
