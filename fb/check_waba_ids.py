#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö WhatsApp Business Account ID
"""

import os
import requests
import json
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def check_waba_and_phones(waba_id):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ WABA –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤"""
    access_token = os.getenv('ACCESS_TOKEN')
    
    if not access_token:
        print("‚ùå ACCESS_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ WABA ID: {waba_id}")
    print("-" * 50)
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —Å–∞–º WABA
    url = f"https://graph.facebook.com/v23.0/{waba_id}"
    headers = {
        'Authorization': f'Bearer {access_token}',
        'Content-Type': 'application/json'
    }
    
    try:
        response = requests.get(url, headers=headers)
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ –¥–ª—è WABA: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ WABA –Ω–∞–π–¥–µ–Ω!")
            print(f"ID: {data.get('id')}")
            print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {data.get('name')}")
            print(f"–°—Ç–∞—Ç—É—Å: {data.get('account_review_status')}")
            
            # –¢–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∏–º –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
            phones_url = f"https://graph.facebook.com/v23.0/{waba_id}/phone_numbers"
            
            print(f"\nüì± –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤...")
            phones_response = requests.get(phones_url, headers=headers)
            print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤: {phones_response.status_code}")
            print(f"–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {phones_response.text}")
            
            if phones_response.status_code == 200:
                phones_data = phones_response.json()
                
                if phones_data.get("data"):
                    print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(phones_data['data'])} –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤:")
                    for i, phone in enumerate(phones_data['data'], 1):
                        print(f"  {i}. ID: {phone.get('id')}")
                        print(f"     –ù–æ–º–µ—Ä: {phone.get('display_phone_number')}")
                        print(f"     –°—Ç–∞—Ç—É—Å: {phone.get('status')}")
                        print(f"     –ö–∞—á–µ—Å—Ç–≤–æ: {phone.get('quality_rating')}")
                        print(f"     –ü—Ä–æ–≤–µ—Ä–µ–Ω: {phone.get('code_verification_status')}")
                        print(f"     –ò–º—è: {phone.get('verified_name')}")
                        print()
                    return True
                else:
                    print("‚ùå –ù–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                    return False
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–º–µ—Ä–æ–≤: {phones_response.status_code}")
                return False
                
        else:
            print(f"‚ùå WABA –Ω–µ –Ω–∞–π–¥–µ–Ω: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ WABA: {e}")
        return False

def main():
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö WhatsApp Business Account ID")
    print("=" * 60)
    
    # ID –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –≤ granular_scopes
    waba_ids = ["1003776954875391", "718496087231012"]
    
    found_waba = False
    
    for waba_id in waba_ids:
        if check_waba_and_phones(waba_id):
            print(f"\n‚úÖ –†–∞–±–æ—á–∏–π WABA ID –Ω–∞–π–¥–µ–Ω: {waba_id}")
            found_waba = True
            break
    
    if not found_waba:
        print("\n‚ùå –ù–∏ –æ–¥–∏–Ω –∏–∑ WABA ID –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    print("\n" + "=" * 60)
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    main()
