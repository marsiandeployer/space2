#!/usr/bin/env python3
"""
–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π WhatsApp Business API
"""

import os
import requests
import json
from datetime import datetime, timedelta
from dotenv import load_dotenv

load_dotenv()

def get_webhooks_info():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ webhooks"""
    access_token = os.getenv('ACCESS_TOKEN')
    waba_id = os.getenv('WHATSAPP_BUSINESS_ACCOUNT_ID')
    
    url = f"https://graph.facebook.com/v23.0/{waba_id}/subscribed_apps"
    headers = {
        'Authorization': f'Bearer {access_token}',
        'Content-Type': 'application/json'
    }
    
    print("üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ webhooks...")
    print(f"URL: {url}")
    
    try:
        response = requests.get(url, headers=headers)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"–û—Ç–≤–µ—Ç: {response.text}")
        
        if response.status_code == 200:
            data = response.json()
            return data
        else:
            return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return None

def get_analytics_data():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    access_token = os.getenv('ACCESS_TOKEN')
    waba_id = os.getenv('WHATSAPP_BUSINESS_ACCOUNT_ID')
    
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    endpoints = [
        f"https://graph.facebook.com/v23.0/{waba_id}/analytics",
        f"https://graph.facebook.com/v23.0/{waba_id}/insights",
        f"https://graph.facebook.com/v23.0/{waba_id}?fields=analytics"
    ]
    
    headers = {
        'Authorization': f'Bearer {access_token}',
        'Content-Type': 'application/json'
    }
    
    for url in endpoints:
        print(f"\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {url}")
        try:
            response = requests.get(url, headers=headers)
            print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text[:300]}...")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")

def get_account_info():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ"""
    access_token = os.getenv('ACCESS_TOKEN')
    waba_id = os.getenv('WHATSAPP_BUSINESS_ACCOUNT_ID')
    
    url = f"https://graph.facebook.com/v23.0/{waba_id}"
    headers = {
        'Authorization': f'Bearer {access_token}',
        'Content-Type': 'application/json'
    }
    
    # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–æ–ª—è
    params = {
        'fields': 'id,name,account_review_status,analytics,currency,message_template_namespace,on_behalf_of_business_info,primary_business_location,timezone_id'
    }
    
    print(f"\nüè¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ...")
    print(f"URL: {url}")
    print(f"–ü–æ–ª—è: {params['fields']}")
    
    try:
        response = requests.get(url, headers=headers, params=params)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"–û—Ç–≤–µ—Ç: {response.text}")
        
        if response.status_code == 200:
            data = response.json()
            return data
        else:
            return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return None

def check_message_templates():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    access_token = os.getenv('ACCESS_TOKEN')
    waba_id = os.getenv('WHATSAPP_BUSINESS_ACCOUNT_ID')
    
    url = f"https://graph.facebook.com/v23.0/{waba_id}/message_templates"
    headers = {
        'Authorization': f'Bearer {access_token}',
        'Content-Type': 'application/json'
    }
    
    print(f"\nüìù –®–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π...")
    print(f"URL: {url}")
    
    try:
        response = requests.get(url, headers=headers)
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"–û—Ç–≤–µ—Ç: {response.text}")
        
        if response.status_code == 200:
            data = response.json()
            if data.get('data'):
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(data['data'])} —à–∞–±–ª–æ–Ω–æ–≤")
                for template in data['data']:
                    print(f"  ‚Ä¢ {template.get('name')} ({template.get('status')})")
            return data
        else:
            return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return None

def main():
    print("üöÄ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("=" * 60)
    
    print("\nüìå –í–ê–ñ–ù–û: WhatsApp Business API –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π!")
    print("–î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:")
    print("1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å webhooks –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏")
    print("2. –í–µ—Å—Ç–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π") 
    print("3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É –¥–ª—è –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    get_webhooks_info()
    get_analytics_data()
    get_account_info()
    check_message_templates()
    
    print("\n" + "=" * 60)
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    
    print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ webhook –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –ë–î")
    print("‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Message ID –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ID: wamid.HBgLNDg1NzUwMTk5MjQVAgARGBJGM0VFOUJDNUZGMkRFQjkwQTcA")

if __name__ == "__main__":
    main()
