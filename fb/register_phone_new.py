#!/usr/bin/env python3
"""
–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è WhatsApp Cloud API
"""

import os
import requests
import json
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def request_code(phone_number_id):
    """–ó–∞–ø—Ä–æ—Å –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä–∞"""
    access_token = os.getenv('ACCESS_TOKEN')
    
    if not access_token:
        print("‚ùå ACCESS_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    url = f"https://graph.facebook.com/v23.0/{phone_number_id}/request_code"
    headers = {
        'Authorization': f'Bearer {access_token}',
        'Content-Type': 'application/json'
    }
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–¥–∞
    data = {
        "code_method": "SMS"  # –ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å "VOICE"
    }
    
    print(f"üì± –ó–∞–ø—Ä–æ—Å –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –Ω–æ–º–µ—Ä–∞ ID: {phone_number_id}")
    print(f"URL: {url}")
    print(f"–ú–µ—Ç–æ–¥: SMS")
    
    try:
        response = requests.post(url, headers=headers, json=data)
        
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫–æ–¥–∞: {response.status_code}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False

def verify_code(phone_number_id, code):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–¥–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä–∞"""
    access_token = os.getenv('ACCESS_TOKEN')
    
    if not access_token:
        print("‚ùå ACCESS_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    url = f"https://graph.facebook.com/v23.0/{phone_number_id}/verify_code"
    headers = {
        'Authorization': f'Bearer {access_token}',
        'Content-Type': 'application/json'
    }
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–æ–¥–∞
    data = {
        "code": code
    }
    
    print(f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–¥–∞ –¥–ª—è –Ω–æ–º–µ—Ä–∞ ID: {phone_number_id}")
    print(f"URL: {url}")
    print(f"–ö–æ–¥: {code}")
    
    try:
        response = requests.post(url, headers=headers, json=data)
        
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!")
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∫–æ–¥–∞: {response.status_code}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False

def register_phone(phone_number_id, pin):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è Cloud API"""
    access_token = os.getenv('ACCESS_TOKEN')
    
    if not access_token:
        print("‚ùå ACCESS_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    url = f"https://graph.facebook.com/v23.0/{phone_number_id}/register"
    headers = {
        'Authorization': f'Bearer {access_token}',
        'Content-Type': 'application/json'
    }
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    data = {
        "messaging_product": "whatsapp",
        "pin": pin
    }
    
    print(f"üîê –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ –¥–ª—è Cloud API...")
    print(f"URL: {url}")
    print(f"PIN: {pin}")
    
    try:
        response = requests.post(url, headers=headers, json=data)
        
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ù–æ–º–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!")
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {response.status_code}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False

def get_phone_numbers():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∏–∑ WhatsApp Business Account"""
    access_token = os.getenv('ACCESS_TOKEN')
    waba_id = os.getenv('WHATSAPP_BUSINESS_ACCOUNT_ID')
    
    if not access_token or not waba_id:
        print("–û—à–∏–±–∫–∞: ACCESS_TOKEN –∏–ª–∏ WHATSAPP_BUSINESS_ACCOUNT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return []
    
    url = f"https://graph.facebook.com/v23.0/{waba_id}/phone_numbers"
    headers = {
        'Authorization': f'Bearer {access_token}',
        'Content-Type': 'application/json'
    }
    
    try:
        response = requests.get(url, headers=headers)
        
        if response.status_code == 200:
            data = response.json()
            
            if data.get("data"):
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(data['data'])} –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤:")
                for i, phone in enumerate(data['data'], 1):
                    print(f"  {i}. ID: {phone.get('id')}")
                    print(f"     –ù–æ–º–µ—Ä: {phone.get('display_phone_number')}")
                    print(f"     –°—Ç–∞—Ç—É—Å: {phone.get('status')}")
                    print(f"     –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {phone.get('platform_type')}")
                    print(f"     –ü—Ä–æ–≤–µ—Ä–µ–Ω: {phone.get('code_verification_status')}")
                    print()
                return data['data']
            else:
                print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ –æ—Ç–≤–µ—Ç–µ")
                return []
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP {response.status_code}: {response.text}")
            return []
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return []

def main():
    print("üöÄ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è WhatsApp Cloud API")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–æ–º–µ—Ä–æ–≤
    phone_numbers = get_phone_numbers()
    if not phone_numbers:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤")
        return
    
    # –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –Ω–æ–º–µ—Ä
    phone_number_id = phone_numbers[0]['id']
    phone_number = phone_numbers[0]['display_phone_number']
    
    print(f"\nüìû –ë—É–¥–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä: {phone_number} (ID: {phone_number_id})")
    
    # –ú–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π
    print("\nüîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:")
    print("1. –ó–∞–ø—Ä–æ—Å–∏—Ç—å –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (SMS)")
    print("2. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫–æ–¥")
    print("3. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä —Å PIN")
    print("4. –í—ã–π—Ç–∏")
    
    while True:
        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-4): ").strip()
        
        if choice == "1":
            print("\n1Ô∏è‚É£ –ó–∞–ø—Ä–æ—Å –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...")
            request_code(phone_number_id)
            
        elif choice == "2":
            code = input("–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥: ").strip()
            if code:
                print(f"\n2Ô∏è‚É£ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–¥–∞: {code}")
                verify_code(phone_number_id, code)
            else:
                print("‚ùå –ö–æ–¥ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
                
        elif choice == "3":
            pin = input("–í–≤–µ–¥–∏—Ç–µ PIN (6-–∑–Ω–∞—á–Ω—ã–π): ").strip()
            if pin and len(pin) == 6 and pin.isdigit():
                print(f"\n3Ô∏è‚É£ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å PIN: {pin}")
                register_phone(phone_number_id, pin)
            else:
                print("‚ùå PIN –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 6-–∑–Ω–∞—á–Ω—ã–º —á–∏—Å–ª–æ–º")
                
        elif choice == "4":
            print("üëã –í—ã—Ö–æ–¥")
            break
            
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 1-4")

if __name__ == "__main__":
    main()
